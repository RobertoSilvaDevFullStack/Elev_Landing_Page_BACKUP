// Facebook Pixel - VERS√ÉO CORRIGIDA 2.1
// Resolve problemas de disparos excessivos e otimiza funil de convers√£o

import { useEffect } from "react";
import Script from "next/script";

interface FacebookPixelProps {
  pixelId: string;
}

// Declara√ß√£o global
declare global {
  interface Window {
    fbq?: (...args: unknown[]) => void;
    _fbq?: (...args: unknown[]) => void;
    fbqInitialized?: boolean;
  }
}

const FacebookPixelOptimized: React.FC<FacebookPixelProps> = ({ pixelId }) => {
  useEffect(() => {
    // Verificar se j√° foi inicializado para evitar duplica√ß√£o
    if (typeof window !== "undefined" && window.fbq && !window.fbqInitialized) {
      try {
        window.fbq("init", pixelId);
        window.fbq("track", "PageView");
        window.fbqInitialized = true;
        console.log(
          "‚úÖ Facebook Pixel v2.1 inicializado (CORRIGIDO):",
          pixelId
        );
      } catch (error) {
        console.warn("‚ö†Ô∏è Facebook Pixel erro (ignorado):", error);
      }
    }
  }, [pixelId]);

  return (
    <>
      <Script
        id="facebook-pixel-optimized-v2"
        strategy="afterInteractive"
        onLoad={() => {
          console.log("‚úÖ Facebook Pixel v2.1 carregado - VERS√ÉO CORRIGIDA");
        }}
        onError={(error) => {
          console.warn("‚ö†Ô∏è Facebook Pixel erro (ignorado):", error);
        }}
        dangerouslySetInnerHTML={{
          __html: `
            (function() {
              try {
                // Verificar se j√° existe para evitar duplica√ß√£o
                if (window.fbq) return;
                
                !function(f,b,e,v,n,t,s)
                {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
                n.callMethod.apply(n,arguments):n.queue.push(arguments)};
                if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
                n.queue=[];t=b.createElement(e);t.async=!0;
                t.src=v;s=b.getElementsByTagName(e)[0];
                s.parentNode.insertBefore(t,s)}(window, document,'script',
                'https://connect.facebook.net/en_US/fbevents.js');
                
                window.fbqScriptLoaded = true;
                console.log('üîß Facebook Pixel v2.1 - Otimizado para convers√µes precisas');
              } catch (error) {
                console.warn('Facebook Pixel falhou:', error);
                window.fbq = window.fbq || function() {
                  console.log('Facebook Pixel offline mode');
                };
              }
            })();
          `,
        }}
      />

      <noscript>
        <div
          style={{ display: "none" }}
          data-pixel-version="2.1"
          data-pixel-id={pixelId}
        >
          Facebook Pixel v2.1 Optimized NoScript
        </div>
      </noscript>
    </>
  );
};

export default FacebookPixelOptimized;

// Hook corrigido - separa inten√ß√µes de convers√µes
export const useFacebookPixelOptimized = () => {
  // APENAS para convers√µes confirmadas (ap√≥s sucesso no banco)
  const trackRealConversion = (
    eventName: string,
    parameters?: Record<string, string | number | boolean>
  ) => {
    if (typeof window === "undefined") return;

    try {
      if (window.fbq) {
        window.fbq("track", eventName, parameters || {});
        console.log(`üéØ CONVERS√ÉO REAL CONFIRMADA: ${eventName}`, parameters);
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è Erro ao confirmar convers√£o ${eventName}:`, error);
    }
  };

  // APENAS para convers√µes customizadas confirmadas
  const trackCustomConversion = (
    eventName: string,
    parameters?: Record<string, string | number | boolean>
  ) => {
    if (typeof window === "undefined") return;

    try {
      if (window.fbq) {
        window.fbq("trackCustom", eventName, parameters || {});
        console.log(
          `üèÜ CONVERS√ÉO CUSTOMIZADA CONFIRMADA: ${eventName}`,
          parameters
        );
      }
    } catch (error) {
      console.warn(
        `‚ö†Ô∏è Erro ao confirmar convers√£o customizada ${eventName}:`,
        error
      );
    }
  };

  // Para tracking de inten√ß√£o (n√£o conta como convers√£o)
  const trackUserIntent = (
    eventName: string,
    parameters?: Record<string, string | number | boolean>
  ) => {
    if (typeof window === "undefined") return;

    try {
      if (window.fbq) {
        window.fbq("trackCustom", eventName, parameters || {});
        console.log(
          `üëÅÔ∏è INTEN√á√ÉO RASTREADA (n√£o convers√£o): ${eventName}`,
          parameters
        );
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è Erro ao rastrear inten√ß√£o ${eventName}:`, error);
    }
  };

  return {
    trackRealConversion, // S√≥ para convers√µes de verdade
    trackCustomConversion, // Convers√µes customizadas confirmadas
    trackUserIntent, // Inten√ß√µes/interesses (n√£o convers√µes)
  };
};

// Eventos reorganizados por tipo
export const FacebookConversionEvents = {
  // CONVERS√ïES REAIS (s√≥ disparar ap√≥s confirma√ß√£o no banco)
  LEAD: "Lead", // Lead confirmado no banco
  COMPLETE_REGISTRATION: "CompleteRegistration", // Registro completado
  CONTACT: "Contact", // Contato confirmado

  // CONVERS√ïES CUSTOMIZADAS (s√≥ ap√≥s sucesso)
  FORM_SUCCESS: "Form_Submit_Success", // Formul√°rio enviado COM SUCESSO
  LEAD_CONFIRMED: "Lead_Database_Saved", // Lead salvo no banco
  EMAIL_SENT: "Email_Notification_Sent", // Email de notifica√ß√£o enviado

  // INTEN√á√ïES (podem disparar antes da convers√£o)
  FORM_STARTED: "Form_Started", // Usu√°rio come√ßou a preencher
  FORM_PROGRESS: "Form_Progress", // Progresso no formul√°rio
  WHATSAPP_INTENT: "WhatsApp_Intent", // Inten√ß√£o de contato WhatsApp
  CONTENT_VIEW: "Content_Engagement", // Engajamento com conte√∫do
};
